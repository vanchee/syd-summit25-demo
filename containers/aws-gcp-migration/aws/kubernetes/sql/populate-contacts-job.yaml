apiVersion: batch/v1
kind: Job
metadata:
  name: populate-contacts-job
spec:
  template:
    spec:
      containers:
      - name: populate-contacts
        image: postgres:13
        command:
        - /bin/bash
        - -c
        - |
          # Copy the script to the container
          cat > /tmp/populate-contacts.sh << 'EOF'
          #!/bin/bash
          
          HOST="pv-syd-summit-demo-rds.cpkg2suyynq5.ap-southeast-2.rds.amazonaws.com"
          POSTGRES_DB="accounts-db"
          POSTGRES_USER="postgres"
          LOCAL_ROUTING_NUM="883745000"
          
          add_contact() {
              # Usage:  add_contact "OWNER_USERNAME" "CONTACT_LABEL" "CONTACT_ACCOUNT"
              echo "user $1 adding contact: $2"
              PGPASSWORD="Chiapet22!" psql -h $HOST -p 5432 -X -v ON_ERROR_STOP=1 -v username="$1" -v label="$2" -v account="$3" -v routing="$LOCAL_ROUTING_NUM" --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
              INSERT INTO contacts VALUES (:'username', :'label', :'account', :'routing', 'false') ON CONFLICT DO NOTHING;
          EOSQL
          }
          
          add_external_account() {
              # Usage:  add_external_account "OWNER_USERNAME" "LABEL" "ACCOUNT" "ROUTING"
              echo "user $1 adding external account: $2"
              PGPASSWORD="Chiapet22!" psql -h $HOST -p 5432 -X -v ON_ERROR_STOP=1 -v username="$1" -v label="$2" -v account="$3" -v routing="$4" --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
              INSERT INTO contacts VALUES (:'username', :'label', :'account', :'routing', 'true') ON CONFLICT DO NOTHING;
          EOSQL
          }
          
          # Create contacts table if it doesn't exist
          create_contacts_table() {
              echo "Creating contacts table..."
              PGPASSWORD="Chiapet22!" psql -h $HOST -p 5432 -U postgres -d accounts-db -c "
              CREATE TABLE IF NOT EXISTS contacts (
                  username VARCHAR(64) NOT NULL,
                  label VARCHAR(128) NOT NULL,
                  account_num CHAR(10) NOT NULL,
                  routing_num CHAR(9) NOT NULL,
                  is_external BOOLEAN NOT NULL,
                  FOREIGN KEY (username) REFERENCES users(username)
              );"
          }
          
          # Load contacts into the database
          create_contacts() {
              # Make everyone contacts of each other
              add_contact "testuser" "Alice" "1033623433"
              add_contact "testuser" "Bob" "1055757655"
              add_contact "testuser" "Eve" "1077441377"
              add_contact "alice" "Testuser" "1011226111"
              add_contact "alice" "Bob" "1055757655"
              add_contact "alice" "Eve" "1077441377"
              add_contact "bob" "Testuser" "1011226111"
              add_contact "bob" "Alice" "1033623433"
              add_contact "bob" "Eve" "1077441377"
              add_contact "eve" "Testuser" "1011226111"
              add_contact "eve" "Alice" "1033623433"
              add_contact "eve" "Bob" "1055757655"
          
              # Add external accounts
              add_external_account "testuser" "External Bank" "9099791699" "808889588"
              add_external_account "alice" "External Bank" "9099791699" "808889588"
              add_external_account "bob" "External Bank" "9099791699" "808889588"
              add_external_account "eve" "External Bank" "9099791699" "808889588"
          }
          
          main() {
              echo "Starting contacts population..."
              create_contacts_table
              create_contacts
              echo "Contacts population completed!"
          }
          
          main
          EOF
          
          # Make the script executable and run it
          chmod +x /tmp/populate-contacts.sh
          /tmp/populate-contacts.sh
        env:
        - name: PGPASSWORD
          value: "Chiapet22!"
        - name: AWS_DEFAULT_REGION
          value: "ap-southeast-2"
      restartPolicy: Never
      serviceAccountName: cymbalbank-sa 